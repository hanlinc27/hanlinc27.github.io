{"version":3,"sources":["webpack:///./src/components/intro/Intro.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/intro/Highlight.tsx"],"names":["Wrapper","styled","div","breakpoints","md","Paragraph","p","responsiveFont","Intro","children","title","className","href","target","src","alt","HighlightItem","span","HighlightText","props","isFirst","HighlightColor","rgba","Highlight","split","map","word","index","words","key","length"],"mappings":"6FAAA,mIAcMA,EAAUC,IAAOC,IAAV,qEAAGD,CAAH,4FAKUE,IAAYC,IAK7BC,EAAYJ,IAAOK,EAAV,uEAAGL,CAAH,yDACZM,YAAe,GAAI,KAKTC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,kBAAC,IAAD,KAEE,kBAACT,EAAD,KACA,kBAAC,IAAD,KACE,kBAACK,EAAD,KAAYI,Q,kCCnClB,gFAOe,4BACb,oCACE,kBAAC,IAAD,CAAQC,MAAM,iBACd,kBAAC,IAAD,KAEC,yBAAKC,UAAY,mBAAjB,0BAFD,SAGM,kBAAC,IAAD,uBAHN,uDAKA,6BALA,+BAM4B,kBAAC,IAAD,eAN5B,SAOI,kBAAC,IAAD,mBAPJ,wBAO+D,6BAP/D,+EAQ4E,kBAAC,IAAD,mBAR5E,eASF,6BATE,+DAU6D,kBAAC,IAAD,+BAV7D,IAU2G,6BAC9G,6BACE,uBAAGC,KAAM,gDAAgDC,OAAS,UAAlE,mCACC,uBAAGD,KAAK,+BAAgCC,OAAO,UAA/C,kCACA,uBAAGD,KAAK,0CAAyCC,OAAO,UAAxD,qCACC,uBAAGD,KAAK,+BAA+BC,OAAO,UAA9C,mCACA,uBAAGD,KAAK,mCAAkCC,OAAO,UAAjD,kBAEJ,6BACA,6BACI,yBAAKF,UAAY,gBAAjB,wCAGA,yBAAKA,UAAU,OAClB,yBAAKA,UAAU,UACb,yBAAKG,IAAI,uGAAuGC,IAAI,aAEtH,yBAAKJ,UAAU,UACb,yBAAKG,IAAI,uGAAuGC,IAAI,cAEtH,yBAAKJ,UAAW,UACd,yBAAKG,IAAI,uGAAuGC,IAAI,YAGrH,yBAAKJ,UAAU,UACd,yBAAKG,IAAI,uGAAuGC,IAAI,cAGtH,yBAAKJ,UAAY,UACf,yBAAKG,IAAM,uGAAuGC,IAAM,aAI5H,6BACA,iC,+HC9CMC,EAAgBf,IAAOgB,KAAV,+EAAGhB,CAAH,wBAIbiB,EAAgBjB,IAAOgB,KAAV,+EAAGhB,CAAH,sDAIA,SAACkB,GAAD,OAAYA,EAAMC,QAAU,GAAK,KAG9CC,EAAiBpB,IAAOgB,KAAV,gFAAGhB,CAAH,+FASEqB,YAAK,UAAW,MAGzBC,EAAY,SAAC,GAAD,SAAGd,SACLe,MAAM,KAAKC,KAAI,SAACC,EAAMC,EAAOC,GAAd,OAClC,kBAACZ,EAAD,CAAea,IAAKF,GAClB,kBAACT,EAAD,CAAeE,QAASQ,EAAME,OAAS,GAAe,IAAVH,GAAcD,GAC1D,kBAACL,EAAD","file":"component---src-pages-index-tsx-143a8eeaeb3cf6d69d3f.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport 'styles/fonts.css';\n\nimport { responsiveFont } from 'styles/utils';\nimport { variables, breakpoints } from 'styles/variables';\nimport { Container } from 'components/container/Container';\nimport { Column } from 'components/grid/Column';\nimport { Row } from 'components/grid/Row';\n\ninterface IntroProps {\n  children: ReactNode;\n}\n\nconst Wrapper = styled.div`\n  padding: 30px 0;\n// used to be 60px\n  border-bottom: 1px solid #e5e5e5;\n\n  @media (min-width: ${breakpoints.md}) {\n    padding: 120px 0;\n  }\n`;\n\nconst Paragraph = styled.p`\n ${responsiveFont(24, 24)};\n  font-family: 'Quattrocento Sans';\n  font-weight: 300;\n`;\n\nexport const Intro = ({ children }: IntroProps) => (\n  <Container>\n    {/* <Column md = {8}> */}\n    <Wrapper>\n    <Row>\n      <Paragraph>{children}</Paragraph>   \n        \n   \n\n      </Row>\n     \n    </Wrapper>\n    {/* </Column> */}\n  </Container>\n);\n","import React from 'react';\nimport {Helmet} from \"react-helmet\";\nimport 'styles/fonts.css';\nimport { Intro } from 'components/intro/Intro';\nimport { Highlight } from \"components/intro/Highlight\";\n\n// tslint:disable-next-line: no-default-export\nexport default () => (\n  <>\n    <Helmet title=\"Hanlin Cheng\" />\n    <Intro>\n      \n     <div className = \"landing-heading\">  Hi, I'm Hanlin. :)) </div>\n    I'm a <Highlight>Systems Design</Highlight>&nbsp;\n    Engineering student at the University of Waterloo. \n    <br></br>\n    I’ve previously interned at <Highlight>VMware</Highlight>&nbsp; \n    and <Highlight>Sunnybrook</Highlight>&nbsp;Research Institute. <br></br>\n    I care about engineering for social good and volunteer a lot with Toronto’s <Highlight>Civic Tech</Highlight>&nbsp; community.\n  <br></br>\n     Currently looking for Fall 2020 Internship opportunities in <Highlight>software development! </Highlight> <br></br>\n <br></br>\n   <a href= \"https://hanlincheng.me/static/hanlincheng.pdf\" target = \"_blank\">resumé            .            </a>\n    <a href=\"mailto:h62cheng@uwaterloo.ca\"  target=\"_blank\">email            .            </a>\n    <a href=\"https://www.linkedin.com/in/hanlincheng\"target=\"_blank\">linkedin            .            </a>\n     <a href=\"https://github.com/hanlinc27\" target=\"_blank\">github            .            </a>\n     <a href=\"https://twitter.com/hanlin_cheng\"target=\"_blank\">twitter       </a>\n\n <br></br>\n <br></br>\n     <div className = \"landing-body\">It's the little things that count...</div>\n\n\n     <div className=\"row\">\n  <div className=\"column\">\n    <img src=\"https://user-images.githubusercontent.com/19617248/82160408-2a795380-9863-11ea-871c-d9851f993394.png\" alt=\"Axolotl\"/>\n  </div>\n  <div className=\"column\">\n    <img src=\"https://user-images.githubusercontent.com/19617248/82160410-2baa8080-9863-11ea-9d1b-8cb899ff133d.png\" alt=\"Elephant\"/>\n  </div>\n  <div className= \"column\">\n    <img src=\"https://user-images.githubusercontent.com/19617248/82160411-2cdbad80-9863-11ea-855f-454d2d5a7351.png\" alt=\"Matcha\"/>\n  </div>\n\n   <div className=\"column\">\n    <img src=\"https://user-images.githubusercontent.com/19617248/82160413-2e0cda80-9863-11ea-9fab-4e60e2b86c6f.png\" alt=\"Dumpling\"/>\n  </div> \n  \n  <div className = \"column\">\n    <img src = \"https://user-images.githubusercontent.com/19617248/82160415-2f3e0780-9863-11ea-844d-662e59d85d42.png\" alt = \"Coffee\"/>\n  </div>\n \n</div>\n<br></br>\n<br></br>\n    </Intro>\n   \n  \n  </>\n);\n","import React, { ReactNode } from 'react';\nimport { rgba } from 'polished';\nimport styled from 'styled-components';\n\ninterface HighlightProps {\n  children: ReactNode;\n}\n\nconst HighlightItem = styled.span`\n  position: relative;\n`;\n\nconst HighlightText = styled.span<{ isFirst?: boolean }>`\n  position: relative;\n  z-index: 1;\n\n  padding-right: ${(props) => (props.isFirst ? 10 : 0)}px;\n`;\n\nconst HighlightColor = styled.span`\n  position: absolute;\n  bottom: 8px;\n  left: 0;\n  z-index: 0;\n\n  width: 100%;\n  height: 16px;\n\n  background-color: ${rgba('#FAFAC6', 0.58)};\n`;\n\nexport const Highlight = ({ children }: HighlightProps): any =>\n  (children as string).split(' ').map((word, index, words) => (\n    <HighlightItem key={index}>\n      <HighlightText isFirst={words.length > 1 && index === 0}>{word}</HighlightText>\n      <HighlightColor />\n    </HighlightItem>\n  ));\n"],"sourceRoot":""}