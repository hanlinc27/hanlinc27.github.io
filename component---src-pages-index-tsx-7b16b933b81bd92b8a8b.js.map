{"version":3,"sources":["webpack:///./src/components/intro/Intro.tsx","webpack:///./src/components/intro/Highlight.tsx","webpack:///./src/components/block-text/BlockText.tsx","webpack:///./src/pages/index.tsx"],"names":["Wrapper","styled","div","breakpoints","md","Paragraph","p","responsiveFont","variables","font","familyHeading","Intro","children","HighlightItem","span","HighlightText","props","isFirst","HighlightColor","rgba","Highlight","split","map","word","index","words","key","length","Block","lg","Heading","h3","Description","BlockText","heading","description","Container","Row","Column","Helmet","title","href","target","rel"],"mappings":"6FAAA,mIAaMA,EAAUC,IAAOC,IAAV,qEAAGD,CAAH,4FAKUE,IAAYC,IAK7BC,EAAYJ,IAAOK,EAAV,uEAAGL,CAAH,yCACXM,YAAe,GAAI,IAENC,IAAUC,KAAKC,eAInBC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,kBAAC,IAAD,KACE,kBAACZ,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQI,GAAI,GACV,kBAACC,EAAD,KAAYO,S,8HC3BhBC,EAAgBZ,IAAOa,KAAV,+EAAGb,CAAH,wBAIbc,EAAgBd,IAAOa,KAAV,+EAAGb,CAAH,sDAIA,SAACe,GAAD,OAAYA,EAAMC,QAAU,GAAK,KAG9CC,EAAiBjB,IAAOa,KAAV,gFAAGb,CAAH,+FASEkB,YAAK,UAAW,KAGzBC,EAAY,SAAC,GAAD,SAAGR,SACLS,MAAM,KAAKC,KAAI,SAACC,EAAMC,EAAOC,GAAd,OAClC,kBAACZ,EAAD,CAAea,IAAKF,GAClB,kBAACT,EAAD,CAAeE,QAASQ,EAAME,OAAS,GAAe,IAAVH,GAAcD,GAC1D,kBAACL,EAAD,W,4DCrBAU,EAAQ3B,IAAOC,IAAV,mEAAGD,CAAH,4DAGYE,IAAY0B,IAK7BC,EAAU7B,IAAO8B,GAAV,qEAAG9B,CAAH,4CACTM,YAAe,GAAI,IAINC,IAAUC,KAAKC,eAG1BsB,EAAc/B,IAAOK,EAAV,yEAAGL,CAAH,sJACbM,YAAe,GAAI,IAGN,OAeJ0B,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,YAAZ,OACvB,kBAACC,EAAA,EAAD,KACE,kBAACR,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQlC,GAAI,GACV,kBAAC0B,EAAD,KAAUI,GACV,kBAACF,EAAD,KAAcG,QC/CT,4BACb,oCACE,kBAACI,EAAA,EAAD,CAAQC,MAAM,SAEd,kBAAC7B,EAAA,EAAD,uBAEE,kBAAC,EAAD,mCAFF,KAEqD,kBAAC,EAAD,oBAFrD,KAIE,kBAAC,EAAD,0BAJF,KAI4C,kBAAC,EAAD,uBAJ5C,uBAQA,kBAAC,EAAD,CACEuB,QAAQ,aACRC,YACE,kLAEuD,IACrD,uBAAGM,KAAK,kBAAkBC,OAAO,SAASC,IAAI,uBAA9C,WAHF","file":"component---src-pages-index-tsx-7b16b933b81bd92b8a8b.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nimport { responsiveFont } from 'styles/utils';\nimport { variables, breakpoints } from 'styles/variables';\nimport { Container } from 'components/container/Container';\nimport { Column } from 'components/grid/Column';\nimport { Row } from 'components/grid/Row';\n\ninterface IntroProps {\n  children: ReactNode;\n}\n\nconst Wrapper = styled.div`\n  padding: 60px 0;\n\n  border-bottom: 1px solid #e5e5e5;\n\n  @media (min-width: ${breakpoints.md}) {\n    padding: 120px 0;\n  }\n`;\n\nconst Paragraph = styled.p`\n  ${responsiveFont(26, 32)};\n\n  font-family: ${variables.font.familyHeading};\n  font-weight: 300;\n`;\n\nexport const Intro = ({ children }: IntroProps) => (\n  <Container>\n    <Wrapper>\n      <Row>\n        <Column md={7}>\n          <Paragraph>{children}</Paragraph>\n        </Column>\n      </Row>\n    </Wrapper>\n  </Container>\n);\n","import React, { ReactNode } from 'react';\nimport { rgba } from 'polished';\nimport styled from 'styled-components';\n\ninterface HighlightProps {\n  children: ReactNode;\n}\n\nconst HighlightItem = styled.span`\n  position: relative;\n`;\n\nconst HighlightText = styled.span<{ isFirst?: boolean }>`\n  position: relative;\n  z-index: 1;\n\n  padding-right: ${(props) => (props.isFirst ? 10 : 0)}px;\n`;\n\nconst HighlightColor = styled.span`\n  position: absolute;\n  bottom: 8px;\n  left: 0;\n  z-index: 0;\n\n  width: 100%;\n  height: 16px;\n\n  background-color: ${rgba('#8effbf', 0.3)};\n`;\n\nexport const Highlight = ({ children }: HighlightProps): any =>\n  (children as string).split(' ').map((word, index, words) => (\n    <HighlightItem key={index}>\n      <HighlightText isFirst={words.length > 1 && index === 0}>{word}</HighlightText>\n      <HighlightColor />\n    </HighlightItem>\n  ));\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nimport { responsiveFont } from 'styles/utils';\nimport { breakpoints, variables } from 'styles/variables';\nimport { Container } from 'components/container/Container';\nimport { Column } from 'components/grid/Column';\nimport { Row } from 'components/grid/Row';\n\ninterface BlockTextProps {\n  heading: string;\n  description: ReactNode;\n}\n\nconst Block = styled.div`\n  padding: 60px 0;\n\n  @media (min-width: ${breakpoints.lg}) {\n    padding: 180px 0;\n  }\n`;\n\nconst Heading = styled.h3`\n  ${responsiveFont(16, 18)}\n\n  margin-bottom: 10px;\n\n  font-family: ${variables.font.familyHeading};\n`;\n\nconst Description = styled.p`\n  ${responsiveFont(16, 18)}\n\n  font-weight: 300;\n  line-height: ${26 / 16};\n\n  a {\n    text-decoration: none;\n    font-weight: 400;\n\n    color: #000;\n    transition: 200ms opacity ease-in-out;\n\n    &:hover {\n      opacity: 0.5;\n    }\n  }\n`;\n\nexport const BlockText = ({ heading, description }: BlockTextProps) => (\n  <Container>\n    <Block>\n      <Row>\n        <Column md={5}>\n          <Heading>{heading}</Heading>\n          <Description>{description}</Description>\n        </Column>\n      </Row>\n    </Block>\n  </Container>\n);\n","import React from 'react';\nimport {Helmet} from 'react-helmet';\n\nimport { Intro } from 'components/intro/Intro';\nimport { Highlight } from 'components/intro/Highlight';\nimport { BlockText } from 'components/block-text/BlockText';\n\n// tslint:disable-next-line: no-default-export\nexport default () => (\n  <>\n    <Helmet title=\"Home\" />\n\n    <Intro>\n      Hi, I'm Hanlin.\n      <Highlight>Systems Design Engineering</Highlight>, <Highlight>React Hooks</Highlight>\n      ,&nbsp;\n      <Highlight>Styled Components</Highlight>, <Highlight>Code Splitting</Highlight> and a lot of\n      love.\n    </Intro>\n\n    <BlockText\n      heading=\"Who we are\"\n      description={\n        <>\n          Ueno is a full-service agency, busy designing and building beautiful digital products,\n          brands, and experiences. For more informations go to{' '}\n          <a href=\"https://ueno.co\" target=\"_blank\" rel=\"noopener noreferrer\">\n            ueno.co\n          </a>\n          .\n        </>\n      }\n    />\n  </>\n);\n"],"sourceRoot":""}