{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/pages/musings.js"],"names":["PostLink","post","to","frontmatter","path","title","date","pageQuery","BlogPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","map","key","id"],"mappings":"iLAWeA,EARE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,6BACE,kBAAC,OAAD,CAAMC,GAAID,EAAKE,YAAYC,MACxBH,EAAKE,YAAYE,MADpB,KAC6BJ,EAAKE,YAAYG,KAD9C,OC6DSC,GAFEC,UAZE,SAAC,GAIX,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAIpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKZ,YAAYG,QACvCU,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAIjB,KAAMa,EAAKC,UAEvD,OAAO,6BAAMN,IAKO","file":"component---src-pages-musings-js-b5a0b902805e017f361c.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) => (\n  <div>\n    <Link to={post.frontmatter.path}>\n      {post.frontmatter.title} ({post.frontmatter.date})\n    </Link>\n  </div>\n)\n\nexport default PostLink","// import React from 'react';\n// import {Helmet} from \"react-helmet\";\n// import {StaticQuery, graphql} from 'gatsby';\n\n// import { Intro } from 'components/intro/Intro';\n\n// const TitleAndDescription = ({data}) => {\n//   const title = data.site.siteMetadata.title\n//   const description = data.site.siteMetadata.description \n//   return (\n//     <div> \n// <h2> {title}</h2>\n// <p> {description}</p>\n// </div>  \n// )\n// }\n\n\n\n// const Heading = () => {\n//   return(\n//     <StaticQuery\n//     query={graphql`\n// query {\n//   site{\n//     siteMetaData{\n//       title\n//       description\n//     }\n//   }\n// }\n//     `}\n//     render={data=> <TitleAndDescription data = {data}/>} \n//     />\n//   )\n// } \n\n\n\n// // tslint:disable no-default-export\n// export default () => (\n//   <>\n//     <Helmet title=\"Musings\" />\n// <div> <Heading /> \n// </div>\n//     <Intro>Blog Page</Intro>\n//   </>\n// );\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PostLink from \"../components/post-link\"\n\nconst BlogPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return <div>{Posts}</div>\n}\n\nexport default BlogPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}